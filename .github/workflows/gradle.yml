name: Gradle Check

on:
  push:
    branches:
      - disable
  pull_request_target:
    types: [ opened, synchronize ]

jobs:
  check:
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/setup-gradle@v4

      - name: Extract Java version from branch
        id: java-version
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH_NAME="${{ github.head_ref }}"
          else
            BRANCH_NAME="${{ github.ref_name }}"
          fi
          echo "Branch name: $BRANCH_NAME"
          
          # Extract Java version from branch name (e.g., java-21, java-17, java-11)
          JAVA_VERSION=$(echo "$BRANCH_NAME" | grep -oE 'java-([0-9]+)' | grep -oE '[0-9]+' || true)
          
          # Fallback to default if no version found in branch name
          if [ -z "$JAVA_VERSION" ]; then
            JAVA_VERSION="${{ vars.JAVA_VERSION }}"
            echo "No Java version found in branch name, using default: $JAVA_VERSION"
          else
            echo "Extracted Java version from branch: $JAVA_VERSION"
          fi
          echo "java-version=$JAVA_VERSION" >> $GITHUB_OUTPUT

      - uses: oracle-actions/setup-java@v1
        if: ${{ vars.GRADLE_JAVA_VERSION != steps.java-version.outputs.java-version }}
        with:
          website: ${{ vars.JDK_SRC }}
          release: ${{ vars.GRADLE_JAVA_VERSION }}

      - run: |
          printf "org.gradle.java.home=%s" "$JAVA_HOME" > gradle.properties
          java --version
        if: ${{ vars.GRADLE_JAVA_VERSION != steps.java-version.outputs.java-version }}

      - uses: oracle-actions/setup-java@v1
        with:
          website: ${{ vars.JDK_SRC }}
          release: ${{ steps.java-version.outputs.java-version }}

      - run: printf "org.gradle.java.home=%s" "$JAVA_HOME" > gradle.properties
        if: ${{ vars.GRADLE_JAVA_VERSION == steps.java-version.outputs.java-version }}

      - name: Gradle Check
        run: |
          printf "\norg.gradle.java.installations.paths=%s" "$JAVA_HOME" >> gradle.properties
          java --version
          ./gradlew --stacktrace -PjavaVersion=${{ steps.java-version.outputs.java-version }} check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
