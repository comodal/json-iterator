plugins {
  id 'java-library'
  id 'maven-publish'
}

project.version = "$VERSION"
project.group = 'systems.comodal'

java {
  toolchain {
    languageVersion =  JavaLanguageVersion.of(project.findProperty('javaVersion') as Integer ?: 23)
  }
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter-api:+'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:+'

  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:+'
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
    exceptionFormat = "full"
    showStandardStreams = true
  }
}

java {
  withJavadocJar()
  withSourcesJar()
}

javadoc {
  options.addBooleanOption('html5', true)
  options.addStringOption('Xdoclint:none', '-quiet')
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      groupId = project.group
      artifactId = project.name
      version = project.version

      pom {
        name = project.name
        description = "$DESCRIPTION"
        url = "$VCS_URL"
        licenses {
          license {
            name = 'MIT License'
            url = 'https://github.com/comodal/json-iterator/blob/master/LICENSE'
          }
        }
        developers {
          developer {
            name = 'Jim'
            id = 'jpe7s'
            email = 'jpe7s.salt188@passfwd.com'
            organization = 'Sava Software'
            organizationUrl = 'https://github.com/sava-software'
          }
        }
        scm {
          connection = 'scm:git:git@github.com:comodal/json-iterator.git'
          developerConnection = 'scm:git:ssh@github.com:comodal/json-iterator.git'
          url = "$VCS_URL"
        }
      }
    }
  }

  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/comodal/json-iterator"
      credentials {
        username = System.getenv("GITHUB_ACTOR") ?: project.findProperty("gpr.user.write")
        password = System.getenv("GITHUB_TOKEN") ?: project.findProperty("gpr.token.write")
      }
    }
  }
}

// ./gradlew :json-iterator:genParser --args='<style>[ifelse, nlogn, nhashn] <unexpected_field_behavior>[throw, skip] <tab_size>[2, 4, etc.] <camelCaseRootName> <file_or_url>(asdf.json, https://)'
// ./gradlew :json-iterator:genParser --args='ifelse skip 2 assets gen.json'
tasks.register('genParser', JavaExec) {
  workingDir = project.getRootDir()
  classpath = sourceSets.jmh.getRuntimeClasspath()
  mainClass = 'systems.comodal.jsoniter.generate.JIParserGeneratorEntryPoint'
}
